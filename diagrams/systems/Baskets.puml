@startuml Network Diagram Baskets
header Network Diagram
title Baskets
node "Virtual Network" as Virtual_Network <<Domain>> {
	node "Kubernetes Cluster" as Kubernetes_Cluster <<Execution Environment>> {
		node "Redis Container" as Redis_Container <<Execution Environment>> {
		}
		node "Basket Container" as Baskets_Basket_Container <<Execution Environment>> {
		}
	}
}
@enduml

''''''''''''''''''''''''''''''
@startuml Deployment Diagram Baskets
header Deployment Diagram
title Baskets
node "Virtual Network" as Virtual_Network <<Domain>> {
	node "Kubernetes Cluster" as Kubernetes_Cluster <<Execution Environment>> {
		node "Redis Container" as Redis_Container <<Execution Environment>> {
			database "Basket Redis Cache" as Baskets_Basket_Redis_Cache <<Cache>>
		}
		queue "Event Bus (Pub/Sub)" as Event_Bus_Event_Bus_Pub_Sub <<Queue>> {
			interface "publish" as Event_Bus_publish
		}
		node "Basket Container" as Baskets_Basket_Container <<Execution Environment>> {
			component "Basket Service" as Baskets_Basket_Service <<Service>> {
			}
		}
	}
}
	Baskets_Basket_Service -down-> Baskets_Basket_Redis_Cache: <<Accesses>>
	Baskets_Basket_Service -down-> Event_Bus_publish: <<Accesses>>
@enduml

''''''''''''''''''''''''''''''
@startuml Component Diagram Baskets
header Component Diagram
title Baskets
package "Baskets" as Baskets_package <<System>>{
	component "Basket Service" as Baskets_Basket_Service <<Service>> {
		interface "subscribe" as subscribe
	}
	database "Basket Redis Cache" as Baskets_Basket_Redis_Cache <<Cache>>
}
	Baskets_Basket_Service -down-> Baskets_Basket_Redis_Cache: <<Accesses>>
	Baskets_Basket_Service -down-> Event_Bus_publish: <<Accesses>>
@enduml
